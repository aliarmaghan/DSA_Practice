/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    List<Integer> arr = new ArrayList<>();
    public void dfs(TreeNode root) {
        if(root ==  null) {
            return;
        }
        arr.add(root.val);
        dfs(root.left);
        dfs(root.right);
    }
    public int getMinimumDifference(TreeNode root) {
        dfs(root);
        int min = Integer.MAX_VALUE;
        Collections.sort(arr);
        for(int i=1; i<arr.size(); i++) {
            int diff = arr.get(i) - arr.get(i-1);
            min = Math.min(min,diff);
        }        
        return min;
    }
}
